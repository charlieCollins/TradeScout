[tox]
min_version = 4.0
env_list = 
    py{39,310,311,312}
    lint
    type-check
    coverage

[testenv]
description = Run unit tests
deps = 
    pytest>=7.4.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.0
    coverage>=7.2.0
commands = 
    pytest {posargs:tests}

[testenv:lint]
description = Run linting tools
deps = 
    black>=23.7.0
    isort>=5.12.0
    flake8>=6.0.0
commands = 
    black --check --diff src tests examples
    isort --check-only --diff src tests examples
    flake8 src tests examples

[testenv:format]
description = Format code
deps = 
    black>=23.7.0
    isort>=5.12.0
commands = 
    black src tests examples
    isort src tests examples

[testenv:type-check]
description = Run type checking
deps = 
    mypy>=1.5.0
    types-requests
    types-python-dateutil
commands = 
    mypy src

[testenv:coverage]
description = Run tests with coverage
deps = 
    pytest>=7.4.0
    pytest-cov>=4.1.0
    coverage>=7.2.0
commands = 
    pytest --cov=tradescout --cov-report=term-missing --cov-report=html
    coverage report --fail-under=80

[testenv:docs]
description = Build documentation
deps = 
    mkdocs>=1.5.0
    mkdocs-material>=9.1.0
    mkdocstrings[python]>=0.22.0
commands = 
    mkdocs build

[testenv:clean]
description = Clean up build artifacts
deps = 
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage', ignore_errors=True)"

[flake8]
max-line-length = 88
extend-ignore = 
    E203,  # whitespace before ':'
    E501,  # line too long (black handles this)
    W503,  # line break before binary operator
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    .venv,
    venv,