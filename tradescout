#!/bin/bash
# TradeScout CLI Wrapper Script
# Handles virtual environment activation and Python module execution

set -e  # Exit on any error

# Get the directory where this script is located
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$SCRIPT_DIR"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[TradeScout]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[TradeScout]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[TradeScout]${NC} $1"
}

print_error() {
    echo -e "${RED}[TradeScout]${NC} $1"
}

# Check if we're in the right directory
if [ ! -f "$PROJECT_ROOT/pyproject.toml" ]; then
    print_error "Error: Not in TradeScout project directory"
    print_error "Expected to find pyproject.toml in: $PROJECT_ROOT"
    exit 1
fi

# Check if virtual environment exists
VENV_DIR="$PROJECT_ROOT/venv"
if [ ! -d "$VENV_DIR" ]; then
    print_error "Error: Virtual environment not found at $VENV_DIR"
    print_error "Please run: python3 -m venv venv && source venv/bin/activate && pip install -e ."
    exit 1
fi

# Check if virtual environment has required packages
PYTHON_BIN="$VENV_DIR/bin/python"
if [ ! -f "$PYTHON_BIN" ]; then
    print_error "Error: Python binary not found in virtual environment"
    exit 1
fi

# Check if TradeScout is installed
if ! "$PYTHON_BIN" -c "import tradescout" 2>/dev/null; then
    print_error "Error: TradeScout not installed in virtual environment"
    print_error "Please run: source venv/bin/activate && pip install -e ."
    exit 1
fi

# Load environment variables from .env if it exists
ENV_FILE="$PROJECT_ROOT/.env"
if [ -f "$ENV_FILE" ]; then
    # Source the .env file, but only export variables that don't contain spaces in names
    while IFS= read -r line; do
        # Skip comments and empty lines
        if [[ "$line" =~ ^[[:space:]]*# ]] || [[ -z "$line" ]]; then
            continue
        fi
        # Export valid environment variables
        if [[ "$line" =~ ^[A-Za-z_][A-Za-z0-9_]*= ]]; then
            export "$line"
        fi
    done < "$ENV_FILE"
fi

# Special handling for no arguments only
case "${1:-}" in
    "")
        print_warning "No command provided. Use './tradescout --help' for usage information."
        exit 1
        ;;
esac

# Change to project root directory
cd "$PROJECT_ROOT"

# Execute the Python module with all arguments
print_status "Executing: python -m src.tradescout.scripts.cli $*"

# Use exec to replace the shell process with Python
exec "$PYTHON_BIN" -m src.tradescout.scripts.cli "$@"